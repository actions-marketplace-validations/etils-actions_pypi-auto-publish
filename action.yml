name: 'PyPI & GitHub auto-release'
author: 'Conchylicultor'
description: 'Auto-detect version increase, build and publish PyPI, tag and release on GitHub.'
branding:
  icon: upload-cloud
  color: orange

inputs:
  pypi-token:
    description: 'Token of the PyPI account publishing the project. If missing, PyPI release is skipped.'
    required: false
  gh-token:
    description: 'Github action token. If missing, GitHub release is skipped.'
    required: false
  parse-changelog:
    description: 'Parse the `CHANGELOG.md` (`keep a changelog`
 format).'
    required: false
    default: false
  pkg-name:
    description: 'Name of the PyPI package (optional).'
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    # Setup Python
    - uses: actions/setup-python@v3
      with:
        python-version: "3.10"
  
    - run: pip install -e .
      shell: bash
  
    - run: pip install packaging
      shell: bash

    # Get the local and PyPI versions
    # Check if local `__version__` < pip version
    # Output: `compare-version.outputs.should-release`
    - id: compare-version
      run: |
        python ${{github.action_path}}/src/compare_version.py \
          --pkg_name="${{ inputs.pkg-name }}"
      shell: bash

    - run: |
        echo version=${{ steps.compare-version.outputs.version }}
        echo should-release=${{ steps.compare-version.outputs.should-release }}
      shell: bash

    # Publish the package (if local `__version__` < pip version)
    - if: |
        inputs.pypi-token
        && steps.compare-version.outputs.should-release == 'true'
      uses: etils-actions/pypi-build-publish@v1
      with:
        pypi-token: ${{ inputs.pypi-token }}

    # TODO(epot):
    # * Could hardcode the version
    # * Could auto-detect changelog and format ?
    - if: |
        inputs.parse-changelog == 'true'
        && steps.compare-version.outputs.should-release == 'true'
      id: changelog
      uses: mindsers/changelog-reader-action@v2

    # Use env indirection to support multi-lines variable
    - if: steps.compare-version.outputs.should-release == 'true'
      run: |
        echo "release-body=$RELEASE_BODY"
      env:
        RELEASE_BODY: ${{ steps.changelog.outputs.changes }}
      shell: bash

    - if: |
        inputs.gh-token
        && steps.compare-version.outputs.should-release == 'true'
      uses: ncipollo/release-action@v1
      with:
        commit: ${{ github.sha }}
        tag: v${{ steps.compare-version.outputs.version }}
        token: ${{ inputs.gh-token }}
        body: ${{ steps.changelog.outputs.changes }}
